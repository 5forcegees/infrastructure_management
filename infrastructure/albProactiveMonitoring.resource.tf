variable "noc400Threshold" {
  default = {
    dev          = "40"
    test         = "40"
    test-account = "40"
    qa           = "40"
    prod         = "40"
    dev-ft  = "40"
    test-ft = "40"
  }
}

variable "general400Threshold" {
  default = {
    dev          = "20"
    test         = "20"
    test-account = "20"
    qa           = "20"
    prod         = "20"
    dev-ft  = "20"
    test-ft = "20"
  }
}

variable "platform400Threshold" {
  default = {
    dev          = "10"
    test         = "10"
    test-account = "10"
    qa           = "10"
    prod         = "10"
    dev-ft  = "10"
    test-ft = "10"
  }
}

variable "noc500Threshold" {
  default = {
    dev          = "40"
    test         = "40"
    test-account = "40"
    qa           = "40"
    prod         = "40"
    dev-ft  = "40"
    test-ft = "40"
  }
}

variable "general500Threshold" {
  default = {
    dev          = "20"
    test         = "20"
    test-account = "20"
    qa           = "20"
    prod         = "20"
    dev-ft  = "20"
    test-ft = "20"
  }
}

variable "platform500Threshold" {
  default = {
    dev          = "10"
    test         = "10"
    test-account = "10"
    qa           = "10"
    prod         = "10"
    dev-ft  = "10"
    test-ft = "10"
  }
}

variable "requiresNOCNotification" {
  default = {
    dev          = "false"
    test         = "false"
    test-account = "false"
    qa           = "true"
    prod         = "true"
    dev-ft  = "false"
    test-ft = "false"
  }
}

variable "requiresGeneralNotification" {
  default = {
    dev          = "false"
    test         = "false"
    test-account = "false"
    qa           = "true"
    prod         = "true"
    dev-ft  = "false"
    test-ft = "false"
  }
}

variable "requiresPlatformNotification" {
  default = {
    dev          = "false"
    test         = "false"
    test-account = "false"
    qa           = "true"
    prod         = "true"
    dev-ft  = "false"
    test-ft = "false"
  }
}

resource "aws_cloudwatch_metric_alarm" "increaing_alb_4XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-increasing-alb-4XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_4XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.platform400Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.platform400Threshold[terraform.workspace]} 4XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresPlatformNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_platform_sns.arn}"]
}

resource "aws_cloudwatch_metric_alarm" "high_alb_4XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-high-alb-4XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_4XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.general400Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.general400Threshold[terraform.workspace]} 4XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresGeneralNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_general_sns.arn}"]
}

resource "aws_cloudwatch_metric_alarm" "critical_alb_4XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-critical-alb-4XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_4XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.noc400Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.noc400Threshold[terraform.workspace]} 4XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresPlatformNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_noc_sns.arn}"]
}


resource "aws_cloudwatch_metric_alarm" "increaing_alb_5XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-increasing-alb-5XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_5XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.platform500Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.platform400Threshold[terraform.workspace]} 5XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresPlatformNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_platform_sns.arn}"]
}

resource "aws_cloudwatch_metric_alarm" "high_alb_5XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-high-alb-5XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_5XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.general400Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.general400Threshold[terraform.workspace]} 5XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresGeneralNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_general_sns.arn}"]
}

resource "aws_cloudwatch_metric_alarm" "critical_alb_5XXs" {

  alarm_name                = "ci-${var.env[terraform.workspace]}-critical-alb-5XX-count"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 1 
  metric_name               = "HTTPCode_ELB_5XX_Count"
  namespace                 = "AWS/ApplicationELB"
  period                    = "300"
  statistic                 = "Sum"
  threshold                 = "${var.noc400Threshold[terraform.workspace]}"
  insufficient_data_actions = []

  dimensions {
    LoadBalancer = "${aws_alb.alb.arn_suffix}"
  }

  alarm_description = "Over ${var.noc400Threshold[terraform.workspace]} 5XX responses have been generated by the ALB."
  actions_enabled   = "${var.requiresPlatformNotification[terraform.workspace]}"
  alarm_actions     = ["${aws_sns_topic.microservice_noc_sns.arn}"]
}

